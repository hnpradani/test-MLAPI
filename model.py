# -*- coding: utf-8 -*-
"""(Deployment) Solver - Iris Dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wXfi1BI9ITRh4QOguMQ_9AQ1Gs0oIIFi
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification
import pickle
from sklearn.metrics import confusion_matrix

#define dataset
iris = load_iris()

# Creating pd DataFrames
iris_df = pd.DataFrame(data= iris.data, columns= iris.feature_names)
target_df = pd.DataFrame(data= iris.target_names, columns= ['species'])

# Concatenate the DataFrames
iris_df = pd.concat([iris_df, target_df], axis= 1)

iris_df.head(5)

iris_df = iris_df.dropna()

iris_df.info()

#split data
X= iris_df.drop(labels= 'species', axis= 1)
y= iris_df['species']

# Splitting the Dataset 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.5, random_state= 101)

print(X)

# modelling
rdf = RandomForestClassifier(max_depth=2, random_state=0)
rdf.fit(X, y)

y_pred = rdf.predict(X_test)

# try to predict
print(rdf.predict([[10, 0, 0.3, 1]]))

# save the model to disk
filename = 'model_iris.sav'
pickle.dump(rdf, open(filename, 'wb'))

print(confusion_matrix(y_test, y_pred))

# Loading model to compare the results
model = pickle.load(open('model_iris.sav','rb'))
print(model.predict([[0.1, 0.2, 0.3, 0.4]]))

